{"version":3,"sources":["assets/icons/link.svg","assets/icons/bulb.svg","assets/icons/logout.svg","assets/icons/pen.svg","assets/icons/twitter.svg","assets/icons/magnifier.svg","assets/icons/plus.svg","theme/GlobalStyle.js","theme/mainTheme.js","context/index.js","templates/MainTemplate.js","components/atoms/Paragraph/Paragraph.js","components/atoms/Heading/Heading.js","components/atoms/Button/Button.js","components/molecules/Card/Card.js","actions/index.js","components/atoms/ButtonIcon/ButtonIcon.js","hoc/withContext.js","components/organisms/Sidebar/Sidebar.js","components/atoms/Input/Input.js","components/organisms/NewItemBar/NewItemBar.js","templates/GridViewTemplate.js","views/Notes.js","views/Articles.js","views/Twitters.js","templates/UserPageTemplate.js","templates/DetailsTemplate.js","views/DetailsPage.js","Routes/index.js","templates/AuthTemplate.js","views/LoginPage.js","views/RegisterPage.js","reducers/index.js","store/index.js","views/Root.js","index.js"],"names":["module","exports","__webpack_require__","p","GlobalStyle","createGlobalStyle","_templateObject","theme","notes","twitters","articles","grey100","grey200","grey300","black","light","bold","fontSize","xxs","xs","s","m","l","xl","PageContext","React","createContext","MainTemplate","state","pageType","setCurrentPage","prevState","arguments","length","undefined","pathname","_this","props","location","_pageTypes$filter","filter","page","includes","currentPage","Object","slicedToArray","setState","this","prevProps","children","react_default","a","createElement","src_context","Provider","value","theme_GlobalStyle","styled_components_browser_esm","Component","withRouter","Paragraph","styled","Paragraph_templateObject","_ref","_ref2","regular","Heading","h1","Heading_templateObject","big","Button","button","Button_templateObject","activecolor","secondary","css","_templateObject2","StyledWrapper","div","Card_templateObject","StyledParagraph","Card_templateObject2","InnerWrapper","_templateObject3","activeColor","flex","_templateObject4","StyledHeading","_templateObject5","StyledAvatar","img","_templateObject6","_ref3","StyledLinkButton","_templateObject7","LinkIcon","StyledButton","_templateObject8","_ref4","propsik","Card","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","redirect","handleCardClick","_this$props","id","cardType","title","twitterName","created","articleUrl","content","removeItem","react_router","to","concat","onClick","src","href","defaultProps","connect","dispatch","itemType","type","payload","removeItemAction","ButtonIcon","ButtonIcon_templateObject","icon","withContext","Consumer","context","assign","pageContext","nav","Sidebar_templateObject","note","StyledLogoLink","Sidebar_templateObject2","StyledLogoutButton","Sidebar_templateObject3","StyledLinksList","ul","Sidebar_templateObject4","Sidebar","Sidebar_StyledWrapper","as","NavLink","penIcon","activeclass","twitterIcon","bulbIcon","logoutIcon","Input","input","Input_templateObject","_ref5","search","Input_templateObject2","_ref6","magnifierIcon","NewItemBar_templateObject","isVisible","StyledTextArea","NewItemBar_templateObject2","StyledInput","NewItemBar_templateObject3","StyledForm","Form","NewItemBar_templateObject4","NewItemBar_templateObject5","NewItemBar_templateObject6","NewItemBar","addItem","handleClose","NewItemBar_StyledWrapper","NewItemBar_StyledHeading","formik_esm","initialValues","onSubmit","values","console","log","handleChange","handleBlur","name","placeholder","onChange","onBlur","NewItemBar_StyledButton","itemContent","item","objectSpread","Math","random","toString","substr","addItemAction","GridViewTemplate_templateObject","StyledGrid","GridViewTemplate_templateObject2","StyledPageHeader","GridViewTemplate_templateObject3","GridViewTemplate_templateObject4","GridViewTemplate_templateObject5","StyledButtonIcon","GridViewTemplate_templateObject6","GridTemplate","isNewItemBarVisible","handleNewItemBarToggle","Fragment","organisms_Sidebar_Sidebar","GridViewTemplate_StyledWrapper","GridViewTemplate_StyledHeading","GridViewTemplate_StyledParagraph","plusIcon","organisms_NewItemBar_NewItemBar","Notes","GridViewTemplate","map","pojedynczy","molecules_Card_Card","key","Articles","Twitters","UserPageTemplate","DetailsTemplate_templateObject","DetailsTemplate_templateObject2","DetailsTemplate_templateObject3","DetailsTemplate_templateObject4","StyledLink","DetailsTemplate_templateObject5","StyledParagraphTwo","DetailsTemplate_templateObject6","DetailsTemplate_templateObject7","DetailsTemplate","templates_UserPageTemplate","DetailsTemplate_StyledWrapper","DetailsTemplate_StyledPageHeader","DetailsTemplate_StyledHeading","DetailsTemplate_StyledButton","Link","DetailsPage","dummyArticle","templates_DetailsTemplate","routes","AuthTemplate_templateObject","StyledAuthCard","AuthTemplate_templateObject2","StyledHeader","AuthTemplate_templateObject3","AuthTemplate","AuthTemplate_StyledWrapper","LoginPage_templateObject","LoginPage_templateObject2","LoginPage_templateObject3","LoginPage","userID","authenticate","templates_AuthTemplate","Heading_Heading","LoginPage_StyledForm","LoginPage_StyledInput","Button_Button","LoginPage_StyledLink","RegisterPage_templateObject","RegisterPage_templateObject2","RegisterPage_templateObject3","RegisterPage","username","password","RegisterPage_StyledForm","RegisterPage_StyledInput","RegisterPage_StyledLink","initialState","rootReducer","action","defineProperty","toConsumableArray","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","notesApp","applyMiddleware","thunk","Root","es","react_router_dom","basename","process","templates_MainTemplate","exact","path","component","render","ReactDOM","views_Root","document","getElementById"],"mappings":"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","file":"static/js/main.16b654bb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/link.6fc1d8fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/bulb.af737b55.svg\";","module.exports = __webpack_public_path__ + \"static/media/logout.0969c92b.svg\";","module.exports = __webpack_public_path__ + \"static/media/pen.84b70f8a.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.051af8ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/magnifier.a14461b8.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.e43ce6c8.svg\";","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Montserrat:300,600');\n  \n  *, *::before, *::after {\n    box-sizing: border-box;\n\n  }\n  \n  html {\n    font-size: 62.5%; \n  }\n  \n  body {\n    padding-left: 50px;\n    font-size: 1.6rem;\n    font-family: \"Montserrat\", sans-serif;\n    @media(min-width: 500px) {\n      padding-left: 90px;\n    }\n    @media(min-width: 1000px) {\n      padding-left: 120px;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","export const theme = {\n  notes: 'hsl(1, 78%, 43%, 1)',\n  twitters: 'hsl(241, 98%, 63%, 1)',\n  articles: 'hsl(48, 98%, 50%, 1)',\n  grey100: 'hsl(0, 0%, 96%)',\n  grey200: 'hsl(0, 0%, 90%)',\n  grey300: 'hsl(0, 0%, 70%)',\n  black: 'hsl(0, 0%, 0%)',\n  light: 300,\n  bold: 600,\n  fontSize: {\n    xxs: '1rem',\n    xs: '1.2rem',\n    s: '1.6rem',\n    m: '2.1rem',\n    l: '2.4rem',\n    xl: '4rem',\n  },\n};\n","import React from 'react'\r\n\r\nconst PageContext = React.createContext('notes')\r\n\r\nexport default PageContext;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyle from '../theme/GlobalStyle';\nimport { theme } from '../theme/mainTheme';\n\nimport { withRouter} from 'react-router';\nimport PageContext from '../context/index'\n\nclass MainTemplate extends Component {\n  state={\n    pageType: 'notes',\n  };\n\n  componentDidMount() { //tylko przy zamontowaniu \n    this.setCurrentPage();\n  }\n\n  componentDidUpdate(prevProps, prevState) { //1poprzednie poropsy ktore zostaly dodane 2. drugi argument\n    this.setCurrentPage(prevState)\n  }\n\n  setCurrentPage = (prevState = '') => {\n    const pageTypes = ['twitters', 'articles', 'notes'];\n    const {location: {pathname}} = this.props;\n    const [currentPage] = pageTypes.filter(page=> pathname.includes(page));\n    if(prevState.pageType !== currentPage) { //poprzedni byl twitters teraz jest twitters wiec nie wykonam sie\n      this.setState({\n        pageType: currentPage\n      })\n    }\n   \n  }\n\n\n\n\n  render() {\n\n  const { children} = this.props; \n  return (\n    <PageContext.Provider value={this.state.pageType}>\n    <div>\n    <GlobalStyle />\n    <ThemeProvider theme={theme}>{children}</ThemeProvider>\n  </div>\n  </PageContext.Provider>\n  )\n      \n    };\n  }\n  MainTemplate.propTypes = {\n    children: PropTypes.element.isRequired,\n    location: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n    }).isRequired,\n  };\nexport default withRouter(MainTemplate);\n","import styled from 'styled-components';\n\nconst Paragraph = styled.p`\n  font-size: ${({ theme }) => theme.fontSize.s};\n  font-weight: ${({ theme }) => theme.regular};\n`;\n\nexport default Paragraph;\n","import styled from 'styled-components';\n\nconst Heading = styled.h1`\n  font-size: ${({ theme, big }) => (big ? theme.fontSize.xl : theme.fontSize.l)};\n  font-weight: ${({ theme }) => theme.bold};\n`;\n\nexport default Heading;\n","import styled, { css } from 'styled-components';\n\nconst Button = styled.button`\n  padding: 0;\n  background-color: ${({ activecolor, theme }) => theme[activecolor]};\n  width: 220px;\n  height: 47px;\n  border: none;\n  border-radius: 50px;\n  font-family: 'Montserrat';\n  font-weight: 600;\n  font-size: 16px;\n  text-transform: uppercase;\n\n  ${({ secondary }) =>\n    secondary &&\n    css`\n      background-color: hsl(0, 0%, 90%);\n      width: 105px;\n      height: 30px;\n      font-size: 10px;\n    `}\n`;\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { css } from 'styled-components';\nimport Paragraph from '../../../components/atoms/Paragraph/Paragraph';\nimport Heading from '../../../components/atoms/Heading/Heading';\nimport Button from '../../../components/atoms/Button/Button';\nimport LinkIcon from '../../../assets/icons/link.svg';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { removeItem as removeItemAction}  from '../../../actions/index';\n\nconst StyledWrapper = styled.div`\n  min-height: 200px;\n  box-shadow: 0 10px 30px -10px hsla(0, 0%, 0%, 0.1);\n  border-radius: 10px;\n  overflow: hidden;\n  position: relative;\n  display: grid;\n  grid-template-rows: 0.25fr 1fr;\n\n\n`;\nconst StyledParagraph = styled(Paragraph)`\nfont-size: 12px;\nline-height: 15px;\nmargin-bottom: 10px;\n@media(min-width: 500px){\n  font-size: 14px;\n}\n@media(min-width: 700px){\n  font-size: 16px;\n  line-height: 20px;\n}\n`;\nconst InnerWrapper = styled.div`\n  position: relative;\n  padding: 17px 30px;\n  background-color: ${({ activeColor, theme }) => (activeColor ? theme[activeColor] : 'white')};\n\n  :first-of-type {\n    z-index: 9999;\n  }\n\n  ${({ flex }) =>\n    flex &&\n    css`\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n    `}\n`;\n\n\n\nconst StyledHeading = styled(Heading)`\n  margin: 5px 0 0;\n  font-size: 10px;\n\n  @media(min-width: 500px){\n    font-size: 14px;\n  }\n\n\n  \n`;\n\nconst StyledAvatar = styled.img`\n  width: 30px;\n  height: 30px;\n  border: 5px solid ${({ theme }) => theme.twitters};\n  border-radius: 50px;\n  position: absolute;\n  right: 10px;\n  top: 10px;\n  @media(min-width: 500px) {\n    width: 35px;\n  height: 35px;\n  }\n  @media(min-width: 700px) {\n    width: 40px;\n  height: 40px;\n  }\n`;\n\nconst StyledLinkButton = styled.a`\n  display: block;\n  width: 30px;\n  height: 30px;\n  border-radius: 50px;\n  background: white url(${LinkIcon}) no-repeat;\n  background-size: 60%;\n  background-position: 50%;\n  position: absolute;\n  right: 25px;\n  top: 50%;\n  transform: translateY(-50%);\n  @media(min-width: 500px) {\n    width: 35px;\n  height: 35px;\n  }\n  @media(min-width: 700px) {\n    width: 40px;\n  height: 40px;\n  }\n`;\nconst StyledButton = styled(Button)`\n  background-color:  ${({ propsik, theme }) => (propsik ? theme[propsik] : 'white')};\n  width: 70px;\n  font-size: 10px;\n\n  @media(min-width: 1000px){\n    width: 90px;\n  font-size: 12px;\n  }\n`;\n\nclass Card extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { };\n  }\n    \n  state = {\n    redirect: false,\n  };\n\n    handleCardClick = () => this.setState({ redirect: true});\n\n    render() {\n      const { id, cardType , title, created, twitterName, articleUrl, content, removeItem } = this.props;\n\n      if(this.state.redirect) {\n          return <Redirect to={`${cardType}/${id}`}/>;\n      }\nreturn (\n  <StyledWrapper onClick={this.handleCardClick}>\n  <InnerWrapper activeColor={cardType}>\n    <StyledHeading>{title}</StyledHeading>\n    {cardType === 'twitters' && <StyledAvatar src={`https://avatars.io/twitter/${twitterName}`} />}\n    {cardType === 'articles' && <StyledLinkButton href={articleUrl} />}\n  </InnerWrapper>\n  <InnerWrapper flex>\n    <StyledParagraph>\n      {content} \n    </StyledParagraph>\n    <StyledButton onClick={()=>removeItem(cardType,id)} propsik={cardType} secondary>Usuń</StyledButton>\n  </InnerWrapper>\n</StyledWrapper>\n);\n}\n}\n\n\nCard.propTypes = {\n  cardType: PropTypes.oneOf(['notes', 'twitters', 'articles']),\n  title: PropTypes.string.isRequired,\n  created: PropTypes.string.isRequired,\n  twitterName: PropTypes.string,\n  articleUrl: PropTypes.string,\n  content: PropTypes.string.isRequired,\n};\n\nCard.defaultProps = {\n  cardType: 'notes',\n  content: null,\n\n};\nconst mapDispatchToProps = dispatch => ({\n    removeItem: (itemType, id) => dispatch(removeItemAction(itemType, id))\n});\nexport default connect(null,mapDispatchToProps)(Card) ;\n","export const removeItem = (itemType, id) => {\r\n  return {\r\n    type: 'REMOVE_ITEM',\r\n    payload: {\r\n      itemType,\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const addItem = (itemType, itemContent) => {\r\n  const getId = () =>\r\n    `_${Math.random()\r\n      .toString(36)\r\n      .substr(2, 9)}`;\r\n\r\n  return {\r\n    type: 'ADD_ITEM',\r\n    payload: {\r\n      itemType,\r\n      item: {\r\n        id: getId(),\r\n        ...itemContent,\r\n      },\r\n    },\r\n  };\r\n};\r\n","import styled from 'styled-components';\n\nconst ButtonIcon = styled.button`\n  display: block;\n  width: 67px;\n  height: 67px;\n  border-radius: 20px;\n  background-image: url(${({ icon }) => icon});\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n  background-size: 50% 50%;\n  border: none;\n\n  &.active {\n    background-color: white;\n  }\n`;\n\nexport default ButtonIcon;\n","import React from 'react'\r\nimport PageContext from '../context/index';\r\n\r\nconst withContext = (Component) => {\r\n    return function contextComponent(props) {\r\n        return (\r\n            <PageContext.Consumer>\r\n                {context => (\r\n                    <Component {...props} pageContext={context} ></Component>\r\n                )}\r\n            </PageContext.Consumer>\r\n        )\r\n    }\r\n}\r\nexport default withContext;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ButtonIcon from '../../../components/atoms/ButtonIcon/ButtonIcon';\nimport bulbIcon from '../../../assets/icons/bulb.svg';\nimport logoutIcon from '../../../assets/icons/logout.svg';\nimport penIcon from '../../../assets/icons/pen.svg';\nimport twitterIcon from '../../../assets/icons/twitter.svg';\nimport withContext from '../../../hoc/withContext';\n\nconst StyledWrapper = styled.nav`\n  position: fixed;\n  left: 0;\n  top: 0;\n  padding: 100px 0;\n  width: 50px;\n  height: 100vh;\n  background-color: ${({ activeColor, theme }) => (activeColor ? theme[activeColor] : theme.note)};\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  @media(min-width: 500px) {\n    width: 70px;\n  }\n`;\n\nconst StyledLogoLink = styled.div`\n  display: block;\n  width: 67px;\n  height: 67px;\n  background-position: 50% 50%;\n  background-size: 80%;\n  border: none;\n  margin-bottom: 10vh;\n`;\n\nconst StyledLogoutButton = styled(ButtonIcon)`\n  margin-top: auto;\n  width: 30px;\n  height: 30px;\n  @media(min-width: 500px) {\n    width: 40px;\n  height: 40px;\n  }\n`;\n\nconst StyledLinksList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n`;\n\nconst Sidebar = ({ pageContext }) => (\n  <StyledWrapper activeColor={pageContext}>\n  <StyledLogoLink/>\n    <StyledLinksList>\n      <li>\n        <StyledLogoutButton as={NavLink} to=\"/notes\" icon={penIcon} activeclass=\"active\" />\n      </li>\n      <li>\n        <StyledLogoutButton as={NavLink} to=\"/twitters\" icon={twitterIcon} activeclass=\"active\" />\n      </li>\n      <li>\n        <StyledLogoutButton as={NavLink} to=\"/articles\" icon={bulbIcon} activeclass=\"active\" />\n      </li>\n    </StyledLinksList>\n    <StyledLogoutButton as={NavLink} to=\"/login\" icon={logoutIcon} />\n  </StyledWrapper>\n);\n\nSidebar.propTypes = {\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\n};\nSidebar.defaultProps = {\n  pageContext: 'notes',\n};\n\nexport default withContext(Sidebar);\n","import styled, { css } from 'styled-components';\nimport magnifierIcon from '../../../assets/icons/magnifier.svg';\n\nconst Input = styled.input`\n  padding: 15px 30px;\n  font-size: ${({ theme }) => theme.fontSize.s};\n  font-weight: ${({ theme }) => theme.regular};\n  background-color: ${({ theme }) => theme.grey100};\n  border: none;\n  border-radius: 50px;\n\n  ::placeholder {\n    text-transform: uppercase;\n    letter-spacing: 1px;\n    color: ${({ theme }) => theme.grey300};\n  }\n\n  ${({ search }) =>\n    search &&\n    css`\n      padding: 10px 20px 10px 40px;\n      font-size: ${({ theme }) => theme.fontSize.xs};\n      background-image: url(${magnifierIcon});\n      background-size: 15px;\n      background-position: 15px 50%;\n      background-repeat: no-repeat;\n    `}\n`;\n\nexport default Input;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Input from '../../atoms/Input/Input'\r\nimport Button from '../../atoms/Button/Button';\r\nimport withContext from '../../../hoc/withContext';\r\nimport Heading from '../../atoms/Heading/Heading';\r\nimport { connect } from 'react-redux';\r\nimport { addItem as addItemAction} from '../../../actions/index';\r\nimport { Formik, Form} from 'formik';\r\n\r\nconst StyledWrapper = styled.div`\r\n    border-left: 10px solid ${({theme, activeColor})=> theme[activeColor]};\r\n    border-top: 10px solid ${({theme, activeColor})=> theme[activeColor]};\r\n    z-index: 10000; \r\n    position: fixed;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 50px 60px;\r\n    right: 0;\r\n    top: 40px;\r\n    height: 100vh;\r\n    width: 300px;\r\n    background-color: white;\r\n    box-shadow: -5px 0 15px rgba(0,0,0,0.1);\r\n    /* transform: translate(${({isVisible}) => (isVisible ? '0' : '100%')}); */\r\n    transform: translateY(${({isVisible}) => (isVisible ? '0' : '100%')});\r\n    transition: transform 1s ease-in-out;\r\n\r\n    @media(min-width: 400px) {\r\n      width:350px;\r\n    }\r\n    @media(min-width: 500px) {\r\n      width:400px;\r\n    }\r\n    @media(min-width: 700px) {\r\n      width:500px;\r\n}\r\n\r\n  @media(min-width: 1000px) {\r\n    width:850px;\r\n}\r\n@media(min-width: 1200px) {\r\n    width:1000px;\r\n}\r\n`\r\nconst StyledTextArea = styled.div`\r\n    margin: 30px 0 100px;\r\n    border-radius:20px;\r\n    height: 30vh;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  margin-top: 30px;\r\n  font-size: 8px;\r\n\r\n  @media(min-width: 700px) {\r\n       font-size: 12px;\r\n}\r\n\r\n`\r\nconst StyledForm = styled(Form)`\r\ndisplay:flex;\r\nflex-direction: column;\r\n`\r\nconst StyledHeading = styled(Heading)`\r\nfont-size: 12px;\r\n@media(min-width: 700px) {\r\n  font-size: 18px;\r\n}\r\n@media(min-width: 1000px) {\r\n  font-size: 22px;\r\n}\r\n`\r\nconst StyledButton = styled(Button)`\r\n  margin-top: 30px;\r\n  font-size: 10px;\r\n  width: 150px;\r\n    @media(min-width: 700px) {\r\n       font-size: 12px;\r\n       width: 200px;\r\n}\r\n\r\n`\r\n\r\nconst NewItemBar = ({ pageContext, isVisible, addItem, handleClose }) => (\r\n    <StyledWrapper isVisible={isVisible} activecolor={pageContext}>\r\n      <StyledHeading big>Stwórz \r\n       {pageContext===\"notes\" ? \" nową notatkę\" : null}\r\n       {pageContext===\"articles\" ? \" nowy artykuł \" : null}\r\n       {pageContext===\"twitters\" ? \" nowy twitt\" : null}\r\n       \r\n       </StyledHeading>\r\n      <Formik\r\n        initialValues={{ title: '', content: '', articleUrl: '', twitterName: '', created: '' }}\r\n        onSubmit={values => {\r\n          addItem(pageContext, values);\r\n          console.log(values)\r\n          handleClose();\r\n        }}\r\n      >\r\n        {({ values, handleChange, handleBlur }) => (\r\n          <StyledForm>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"title\"\r\n              placeholder=\"Tytuł\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.title}\r\n            />\r\n            {pageContext === 'twitters' && (\r\n              <StyledInput\r\n                placeholder=\"Nazwa twittera\"\r\n                type=\"text\"\r\n                name=\"twitterName\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.twitterName}\r\n              />\r\n            )}\r\n            {pageContext === 'articles' && (\r\n              <StyledInput\r\n                placeholder=\"link do artykułu\"\r\n                type=\"text\"\r\n                name=\"articleUrl\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.articleUrl}\r\n              />\r\n            )}\r\n            <StyledTextArea\r\n              name=\"content\"\r\n              as=\"textarea\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.content}\r\n            />\r\n            <StyledButton type=\"submit\" activecolor={pageContext}>\r\n              Dodaj notatke\r\n            </StyledButton>\r\n          </StyledForm>\r\n        )}\r\n      </Formik>\r\n    </StyledWrapper>\r\n  );\r\n  \r\n  NewItemBar.propTypes = {\r\n    pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\r\n    isVisible: PropTypes.bool,\r\n    addItem: PropTypes.func.isRequired,\r\n    handleClose: PropTypes.func.isRequired,\r\n  };\r\n  \r\n  NewItemBar.defaultProps = {\r\n    pageContext: 'notes',\r\n    isVisible: false,\r\n  };\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    addItem: (itemType, itemContent) => dispatch(addItemAction(itemType, itemContent)),\r\n  });\r\n  \r\n  export default connect(\r\n    null,\r\n    mapDispatchToProps,\r\n  )(withContext(NewItemBar));\r\n  ","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Sidebar from '../components/organisms/Sidebar/Sidebar';\r\nimport Heading from '../components/atoms/Heading/Heading';\r\nimport Paragraph from '../components/atoms/Paragraph/Paragraph';\r\nimport withContext from '../hoc/withContext'\r\nimport ButtonIcon from '../components/atoms/ButtonIcon/ButtonIcon'\r\nimport NewItemBar from '../components/organisms/NewItemBar/NewItemBar'\r\nimport plusIcon from '../assets/icons/plus.svg'\r\n\r\nconst StyledWrapper = styled.div`\r\nposition: relative;\r\n  padding: 25px 0px 25px 0px;\r\n`;\r\n\r\nconst StyledGrid = styled.div`\r\n\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-gap: 85px;\r\n  @media(max-width:1000px){\r\n    grid-template-columns: repeat(1, 0.8fr);\r\n  }\r\n`;\r\n\r\nconst StyledPageHeader = styled.div`\r\n  margin: 25px 0 50px 0;\r\n`;\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 25px 0 10px 0;\r\n  font-size: 12px;\r\n  text-align: center;\r\n  @media(min-width:500px){\r\n    font-size: 16px;\r\n  }\r\n  @media(min-width:1000px){\r\n    font-size: 20px;\r\n  }\r\n\r\n  ::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`;\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  margin: 0;\r\n  font-size: 10px;\r\n  text-align: center;\r\n  @media(min-width:500px){\r\n    font-size: 12px;\r\n  }\r\n    @media(min-width:1000px){\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\n\r\nconst StyledButtonIcon = styled(ButtonIcon)`\r\n  position: fixed;\r\n  bottom: 30px;\r\n  right: 20px;\r\n  background-color: ${({activeColor, theme}) => theme[activeColor] };\r\n  border-radius: 50%;\r\n  background-size: 20%;\r\n    height: 35px;\r\n    width: 35px;\r\n  z-index: 10001;\r\n\r\n  @media(min-width: 500px) {\r\n    background-size: 20%;\r\n    height: 50px;\r\n    width: 50px;\r\n  }\r\n  @media(min-width: 1000px) {\r\n    height: 70px;\r\n    width: 70px;\r\n    bottom: 40px;\r\n  right: 40px;\r\n  }\r\n\r\n`\r\n\r\n\r\n\r\nclass GridTemplate extends Component {\r\n  state = { \r\n    isNewItemBarVisible: false,\r\n  }\r\n\r\n  handleNewItemBarToggle = () => {\r\n    this.setState(prevState => ({\r\n      isNewItemBarVisible: !prevState.isNewItemBarVisible,\r\n  }))\r\n  };\r\n   \r\n\r\n\r\n  render() {\r\n\r\n    const { children, pageType, pageContext } = this.props;\r\n    const {isNewItemBarVisible} = this.state;\r\n    return (\r\n      <>\r\n      <Sidebar pageType={pageContext} />\r\n      <StyledWrapper pageType={pageType}>\r\n        <StyledPageHeader>\r\n          \r\n          <StyledHeading as=\"h1\">\r\n            {pageType===\"notes\" ? \"Dodaj nową notatkę\" : null}\r\n            {pageType===\"twitters\" ? \"Dodaj nowego twitta\" : null}\r\n            {pageType===\"articles\" ? \"Dodaj nowy artykuł\" : null}\r\n          </StyledHeading>\r\n          <StyledParagraph> \r\n          dodaj\r\n          {pageType===\"notes\" ? \" notetkę!\" : null}\r\n          {pageType===\"twitters\" ? \" twitta!\" : null}\r\n          {pageType===\"articles\" ? \" artykuł!\" : null}\r\n          \r\n          </StyledParagraph>\r\n        </StyledPageHeader>\r\n        <StyledButtonIcon onClick={this.handleNewItemBarToggle} icon={plusIcon} activeColor={pageContext}></StyledButtonIcon>\r\n        <NewItemBar handleClose={this.handleNewItemBarToggle} isVisible={isNewItemBarVisible}/>\r\n        <StyledGrid>{children}</StyledGrid>\r\n      </StyledWrapper>\r\n    </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nGridTemplate.propTypes = {\r\n  children: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  pageContext: PropTypes.oneOf(['notes', 'twitters', 'articles']),\r\n};\r\n\r\nGridTemplate.defaultProps = {\r\n  pageContext: 'notes',\r\n};\r\n\r\nexport default withContext(GridTemplate);\r\n","import React from 'react';\nimport Card from '../components/molecules/Card/Card';\nimport GridTemplate from '../templates/GridViewTemplate';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nconst Notes = ({notes}) => (\n  <GridTemplate pageType=\"notes\">\n    {notes.map(pojedynczy => (\n    <Card cardType=\"notes\"\n    id={pojedynczy.id}\n    title={pojedynczy.title}\n    content={pojedynczy.content}\n    created={pojedynczy.created}\n    key={pojedynczy.id}\n    />\n    ))}\n  </GridTemplate>\n);\n\nNotes.propTypes = {\n  notes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      created: PropTypes.string.isRequired,\n    }),\n  ),\n};\nNotes.defaultProps = {\n  notes: [],\n};\nconst mapStateToProps = state => {\n  const { notes } = state;\n  console.log(state);\n  return {notes};\n}\n\n\nexport default connect(mapStateToProps)(Notes);\n","import React from 'react';\nimport Card from '../components/molecules/Card/Card'\nimport GridTemplate from '../templates/GridViewTemplate';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\n\nconst Articles = ({articles}) => (\n  <GridTemplate pageType=\"articles\">\n    {articles.map(pojedynczy => (\n      <Card \n      cardType=\"articles\"\n      title={pojedynczy.title}\n      content={pojedynczy.content}\n      articleUrl={pojedynczy.articleUrl}\n      created={pojedynczy.created}\n      key={pojedynczy.title}\n      id={pojedynczy.id}\n      ></Card>\n    ))}\n  </GridTemplate>\n);\n\nArticles.propTypes = {\n  articles: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      created: PropTypes.string.isRequired,\n      articleUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nArticles.defaultProps = {\n  articles: [],\n};\n\n\nconst mapStateToProps = state => {\n  const { articles } = state;\n  return {articles};\n}\n\n\nexport default connect(mapStateToProps)(Articles);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Card from '../components/molecules/Card/Card';\nimport GridTemplate from '../templates/GridViewTemplate';\nimport PropTypes from 'prop-types';\n\nconst Twitters = ({twitters}) => (\n  <GridTemplate pageType=\"twitters\">\n  {twitters.map(pojedynczy => (\n   <Card cardType=\"twitters\"\n   title={pojedynczy.title}\n   content={pojedynczy.content}\n   twitterName={pojedynczy.twitterName}\n   created={pojedynczy.created}\n   key={pojedynczy.title}\n   id={pojedynczy.id}\n   />\n   ))}\n </GridTemplate>\n)\n\nTwitters.propTypes = {\n  twitters: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      twitterName: PropTypes.string.isRequired,\n      created: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nTwitters.defaultProps = {\n  twitters: [],\n};\n\nconst mapStateToProps = state => {\n  const { twitters } = state;\n  return { twitters };\n};\n\nexport default connect(mapStateToProps)(Twitters);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Sidebar from '../components/organisms/Sidebar/Sidebar';\n\n\n\n\nconst UserPageTemplate = ({ children }) => (\n  <>\n    <Sidebar />\n    {children}\n  </>\n);\n\nUserPageTemplate.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.element, PropTypes.node]).isRequired,\n};\n\nexport default UserPageTemplate;\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport UserPageTemplate from '../templates/UserPageTemplate';\r\nimport Button from '../components/atoms/Button/Button';\r\nimport styled from 'styled-components';\r\nimport Heading from '../../src/components/atoms/Heading/Heading';\r\nimport Paragraph from '../../src/components/atoms/Paragraph/Paragraph';\r\nimport PropTypes from 'prop-types';\r\nimport withContext from '../hoc/withContext';\r\n\r\nconst StyledWrapper = styled.div`\r\n  padding: 25px 150px 25px 30px;\r\n  max-width: 50vw;\r\n  position: relative;\r\n  @media (max-width: 1200px) {\r\n    max-width: 80vw;\r\n  }\r\n`\r\nconst StyledPageHeader = styled.div`\r\n  margin: 25px 0 0 0;\r\n`\r\n\r\nconst StyledParagraph = styled(Paragraph)`\r\n  margin: 0;\r\n  font-weight: ${({theme})=> theme.bold};\r\n`\r\n\r\n\r\nconst StyledButton = styled(Button)`\r\n      padding: 10px;\r\n      width: 150px;\r\n      font-size: 10px;\r\n      text-decoration: none;\r\n      color: black;\r\n\r\n      @media(min-width: 600px) {\r\n        font-size: 14px;\r\n        width: 250px;\r\n      }\r\n\r\n`\r\n\r\n\r\nconst StyledLink = styled.a`\r\ndisplay: block;\r\nfont-weight: ${({theme})=> theme.bold};\r\nfont-size: 10px;\r\ncolor: black;\r\ntext-transform: uppercase;\r\nmargin: 40px 0 30px;\r\n\r\n\r\n@media(min-width: 500px) {\r\n  font-size: 12px;\r\n}\r\n`\r\nconst StyledParagraphTwo = styled(Paragraph)`\r\n  margin-bottom: 30px;\r\n  font-size: 12px;\r\n  width: 180px;\r\n  padding: 15px;\r\n  box-shadow: 0 10px 30px -10px hsla(0, 0%, 0%, 0.2);\r\n\r\n\r\n  @media(min-width: 500px){\r\n    font-size: 14px;\r\n    width: 250px;\r\n  }\r\n  @media(min-width: 600px){\r\n    font-size: 16px;\r\n    width: 350px;\r\n  }\r\n    @media(min-width: 1000px){\r\n    font-size: 20px;\r\n    width: 500px;\r\n  }\r\n`\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 25px 0 50px 0;\r\n  font-size: 20px;\r\n  \r\n  @media(min-width: 500px){\r\n    font-size: 22px;\r\n  }\r\n  @media(min-width: 600px){\r\n    font-size: 28px;\r\n  }\r\n  ::first-letter {\r\n    text-transform: uppercase;\r\n  }\r\n`\r\n\r\nconst DetailsTemplate = ({ pageContext, title, created, content, articleUrl, twitterName }) => (\r\n  <UserPageTemplate>\r\n    <StyledWrapper>\r\n      <StyledPageHeader>\r\n        <StyledHeading big as=\"h1\">\r\n          {title}\r\n        </StyledHeading>\r\n         \r\n      </StyledPageHeader>\r\n      <StyledParagraphTwo>{content}</StyledParagraphTwo>\r\n      {pageContext === 'articles' && <StyledLink href={articleUrl}>Otwórz artykuł</StyledLink>}\r\n      \r\n      <StyledButton as={Link} to={`/${pageContext}`} activecolor={pageContext}>\r\n        Zapisz\r\n      </StyledButton>\r\n    </StyledWrapper>\r\n  </UserPageTemplate>\r\n);\r\n\r\nDetailsTemplate.propTypes = {\r\n  pageContext: PropTypes.oneOf(['notes', 'articles', 'twitters']).isRequired,\r\n  title: PropTypes.string,\r\n  created: PropTypes.string,\r\n  content: PropTypes.string,\r\n  articleUrl: PropTypes.string,\r\n  twitterName: PropTypes.string,\r\n};\r\n\r\nDetailsTemplate.defaultProps = {\r\n  title: '',\r\n  created: '',\r\n  content: '',\r\n  articleUrl: '',\r\n  twitterName: '',\r\n};\r\n\r\nexport default withContext(DetailsTemplate);\r\n","import React, {Component} from 'react';\r\nimport DetailsTemplate from '../templates/DetailsTemplate';\r\n\r\n\r\nclass DetailsPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {  }\r\n\r\n    }\r\n    state = {\r\n        pageType: 'notes',\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const dummyArticle = {\r\n            id: 1,\r\n            title: 'Komedia filmowa ',\r\n            content: 'lorem lorem content lorem lorem content lorem lorem content lorem lorem content lorem lorem content lorem lorem content lorem lorem content',\r\n            twitterName: 'random',\r\n            articleUrl: 'http://www.google.pl',\r\n            created: '1day',\r\n        }\r\n\r\n    return (\r\n\r\n    <DetailsTemplate\r\n        pageType={this.state.pageType}\r\n        title={dummyArticle.title}\r\n        created={dummyArticle.created}\r\n        content={dummyArticle.content}\r\n        articleUrl={dummyArticle.articleUrl}\r\n        twitterName={dummyArticle.twitterName}\r\n    />\r\n        );\r\n    };\r\n};\r\n\r\n\r\nexport default DetailsPage;","export const routes = {\r\n\r\n    home: '/',\r\n    notes: '/notes',\r\n    twitters: '/twitters',\r\n    articles: '/articles',\r\n\r\n    article: '/articles/:id',\r\n    twitter: '/twitters/:id',\r\n    note: '/notes/:id',\r\n    login: '/login',\r\n    register: '/register',\r\n}","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Heading from '../components/atoms/Heading/Heading';\r\nconst StyledWrapper = styled.div`\r\n\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: ${({ theme }) => theme.notes};\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\nconst StyledAuthCard = styled.div`\r\n  width: 400px;\r\n  height: 400px;\r\n  margin-top: 40px;\r\n  background-color: white;\r\n  border-radius: 10px;\r\n  box-shadow: 0 10px 20px -10px rgba(0, 0, 0, 0.2);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst StyledHeader = styled(Heading)`\r\n  text-align: center;\r\n  font-size: 14px;\r\n  @media(min-width:800px) {\r\n    font-size: 20px;\r\n  }\r\n`\r\nconst AuthTemplate = ({ children }) => (\r\n  <>\r\n  \r\n  <StyledWrapper>\r\n    \r\n    <StyledHeader>Zaloguj się aby zobaczyć swoje notatki online</StyledHeader>\r\n    <StyledAuthCard>{children}</StyledAuthCard>\r\n  </StyledWrapper>\r\n  </>\r\n);\r\n\r\nexport default AuthTemplate;","import React from 'react';\r\nimport { Formik, Form } from 'formik';\r\nimport styled from 'styled-components';\r\nimport AuthTemplate from '../templates/AuthTemplate';\r\n\r\nimport Heading from '../components/atoms/Heading/Heading';\r\nimport Input from '../components/atoms/Input/Input';\r\nimport Button from '../components/atoms/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { routes } from '../Routes/index';\r\nimport { Redirect} from 'react-router-dom';\r\n\r\nconst StyledForm = styled(Form)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  margin: 0 0 30px 0;\r\n  height: 40px;\r\n  width: 300px;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: block;\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  font-size: ${({ theme }) => theme.fontSize.xs};\r\n  color: black;\r\n  text-transform: uppercase;\r\n  margin: 20px 0 50px;\r\n`;\r\n\r\nconst LoginPage = ({userID, authenticate}) => (\r\n\r\n  <AuthTemplate>\r\n    <Formik\r\n     \r\n    >\r\n      {({ handleChange, handleBlur, values }) => {\r\n          if(userID){\r\n              return <Redirect to={routes.home}/>;\r\n          }\r\n          return (\r\n        <>\r\n          <Heading>Zaloguj się</Heading>\r\n          <StyledForm>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Login\"\r\n             \r\n            />\r\n            <StyledInput\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Hasło\"\r\n              \r\n            />\r\n            <Button activecolor=\"notes\" type=\"submit\">\r\n              Zaloguj\r\n            </Button>\r\n          </StyledForm>\r\n          <StyledLink to={routes.register}>Zarejestruj się!</StyledLink>\r\n        </>\r\n          )}}\r\n    </Formik>\r\n  </AuthTemplate>\r\n);\r\n\r\n\r\nexport default LoginPage ;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Formik, Form } from 'formik';\r\n\r\nimport AuthTemplate from '../templates/AuthTemplate';\r\n\r\nimport Heading from '../components/atoms/Heading/Heading';\r\nimport Input from '../components/atoms/Input/Input';\r\nimport Button from '../components/atoms/Button/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { routes } from '../Routes/index'\r\n\r\n\r\nconst StyledForm = styled(Form)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst StyledInput = styled(Input)`\r\n  margin: 0 0 30px 0;\r\n  height: 40px;\r\n  width: 300px;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  display: block;\r\n  font-weight: ${({ theme }) => theme.bold};\r\n  font-size: ${({ theme }) => theme.fontSize.xs};\r\n  color: black;\r\n  text-transform: uppercase;\r\n  margin: 20px 0 50px;\r\n`;\r\n\r\nconst RegisterPage = () => (\r\n  <AuthTemplate>\r\n    <Formik\r\n      initialValues={{ username: '', password: '' }}\r\n      onSubmit={({ username, password }) => {\r\n        console.log('hello');\r\n      }}\r\n    >\r\n      {({ handleChange, handleBlur, values }) => (\r\n        <>\r\n          <Heading>Zarejestruj się</Heading>\r\n          <StyledForm>\r\n            <StyledInput\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Login\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.title}\r\n            />\r\n            <StyledInput\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Hasło\"\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              value={values.title}\r\n            />\r\n            <Button activecolor=\"notes\" type=\"submit\">\r\n              Rejestracja\r\n            </Button>\r\n          </StyledForm>\r\n          <StyledLink to={routes.login}>Zaloguj się!</StyledLink>\r\n        </>\r\n      )}\r\n    </Formik>\r\n  </AuthTemplate>\r\n\r\n);\r\n\r\nexport default RegisterPage;","const initialState = {\r\n  twitters: [\r\n    {\r\n      id: 1,\r\n      title: 'Wprowadzenie do hooków',\r\n      content:\r\n        'Hooki są nowym dodatkiem w Reakcie 16.8. Pozwalają one używać stanu i innych funkcjonalności Reacta, bez użycia klas.',\r\n        created: '1 day',\r\n        twitterName: 'aaa',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'React Redux',\r\n      content:\r\n        'Od samego początku musimy podkreślić, że Redux nie ma związku z React. Możesz pisać aplikacje Redux za pomocą React, Angular, Ember, jQuery lub waniliowego JavaScript.',\r\n        created: '1 day',\r\n        twitterName: 'dan_abramov',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'Styled component w React',\r\n      content:\r\n        'Styled-components jest wynikiem zastanawiania się, w jaki sposób możemy ulepszyć CSS do stylizacji systemów komponentów React. Koncentrując się na pojedynczym przypadku użycia, udało nam się zoptymalizować doświadczenie dla programistów, a także wydajność dla użytkowników końcowych.',\r\n        created: '1 day',\r\n        twitterName: 'aaa',\r\n    },\r\n    \r\n  ],\r\n  articles: [\r\n    {\r\n      id: 1,\r\n      title: 'React artykuł',\r\n      content:\r\n        'Nasz duży zespół inżynierów korzysta z tego przewodnika rozwoju',\r\n      articleUrl: 'https://www.freecodecamp.org/news/grabs-front-end-guide-for-large-teams-484d4033cc41/',\r\n      created: '1 day',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Czysty kod w React',\r\n      content:\r\n        'Jak napisać bardzo czytelny kod React - 10 wskazówek dotyczących stylu kodowania',\r\n        created: '1 day',\r\n        articleUrl: 'https://youtube.com/helloroman',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: 'You gave React a bad name',\r\n      content:\r\n        'Lorem ipsum dolor sit amet consectetur adipisicing elit. Delectus, tempora quibusdam natus modi tempore esse adipisci, dolore odit animi',\r\n        created: '1 day',\r\n        articleUrl: 'https://www.freecodecamp.org/news/10-points-to-remember-thatll-help-you-master-coding-in-reactjs-library-d0520d8c73d8/',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: 'Kurs Reacta - udemy',\r\n      content:\r\n        'React 16 - Kompletny przewodnik (w tym React Router 4 i Redux)',\r\n      articleUrl: 'https://www.udemy.com/course/react-the-complete-guide-incl-redux/?LSNPUBID=JVFxdTr9V80&ranEAID=JVFxdTr9V80&ranMID=39197&ranSiteID=JVFxdTr9V80-Q3q.KljcfruAzgZwaqyUjw',\r\n      created: '10 days',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: 'Kompletny kurs React Native i Redux',\r\n      content:\r\n        'Tworzenie aplikacji na iOS i Androida od zera - buduj pełne aplikacje mobilne React Native bardzo szybko!',\r\n      articleUrl: 'https://www.udemy.com/course/the-complete-react-native-and-redux-course/?LSNPUBID=JVFxdTr9V80&ranEAID=JVFxdTr9V80&ranMID=39197&ranSiteID=JVFxdTr9V80-8suJ_4d.g3Q1mcWkI6wKCA',\r\n      created: '10 days',\r\n    },\r\n  ],\r\n  notes: [\r\n    {\r\n      id: 1,\r\n      title: 'Zapraszam do dodawania notatek!',\r\n      created: '1 day',\r\n      content:\r\n        'Każdy może dodać notatkę przycisk \"+\" prawy dolny róg. Zapraszam! ',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'Zakupy',\r\n      created: '1 day',\r\n      content:\r\n        'Kupić: 1. Banany 2. Pomarańcze 3.Cytryny 4.Cebula 5. Kiwi',\r\n    },\r\n    \r\n  ],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_ITEM':\r\n      return {\r\n        ...state,\r\n        [action.payload.itemType]: [...state[action.payload.itemType], action.payload.item],\r\n      };\r\n    case 'REMOVE_ITEM':\r\n      return {\r\n        ...state,\r\n        [action.payload.itemType]: [\r\n          ...state[action.payload.itemType].filter(item => item.id !== action.payload.id),\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport notesApp from '../reducers/index';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(notesApp,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n    )\r\n\r\n\r\nexport default store;","import React from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport MainTemplate from '../templates/MainTemplate';\nimport Notes from './Notes';\nimport Articles from './Articles';\nimport Twitters from './Twitters';\n\nimport DetailsPage from './DetailsPage';\nimport { routes } from '../Routes/index';\nimport LoginPage from '../views/LoginPage';\nimport RegisterPage from '../views/RegisterPage';\nimport store from '../store/index';\n\nconst Root = () => (\n  <Provider store={store}>\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <MainTemplate>\n      <Switch>\n          <Route exact path={routes.login} component={LoginPage} />\n          <Route exact path={routes.register} component={RegisterPage} />\n          <Route exact path={routes.home} render={() => <Redirect to=\"/notes\" />} />\n          <Route exact path={routes.notes} component={Notes} />\n          <Route path={routes.note} component={DetailsPage} />\n          <Route exact path={routes.articles} component={Articles} />\n          <Route path={routes.article} component={DetailsPage} />\n          <Route exact path={routes.twitters} component={Twitters} />\n          <Route path={routes.twitter} component={DetailsPage} />\n      </Switch>\n    </MainTemplate>\n  </BrowserRouter>\n  </Provider>\n);\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from './views/Root';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}